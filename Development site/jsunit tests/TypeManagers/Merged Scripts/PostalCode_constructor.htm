<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
   <script src="../../../jsunit/jsUnitCore.js" type="text/javascript"></script>
   <script src="../../../jsunit tests/Shared.js" type="text/javascript"></script>
   <script src="../../../jquery-globalize/globalize.js" type="text/javascript"></script>
   <script src="../../../jTAC-min/Merged/core.js" type="text/javascript"></script>
   <script src="../../../jTAC-min/Merged/typemanagers-strings-common.js" type="text/javascript"></script>
   <script type="text/javascript">
      // Scripts require jsUnit. All functions that start with "test" are considered test cases. These functions cannot have any parameters.
      function testCreateDefault()
      {
         var vInstance1 = jTAC.create("TypeManagers.PostalCode");
         assertNotNull(vInstance1);
         assertEquals("", vInstance1.region);
         assertNotNull(vInstance1.getRegionsData());
         assertObjectEquals(window.jTAC_PostalCodeRegionsData, vInstance1.getRegionsData());
      }

      function testCreateSetAllProperties()
      {
         var vInstance1 = jTAC.create("TypeManagers.PostalCode");
         assertNotNull(vInstance1);
         var rds = vInstance1._selectRegionNodes(); // region = "". Uses defaultName which is "UnitedStates|Canada"
         assertNotNull(rds);
         assertEquals(2, rds.length);
         assertEquals("UnitedStates", rds[0].name);
         assertEquals("Canada", rds[1].name);

         vInstance1.region = "NorthAmerica"; // alias to UnitedStates|Canada
         assertEquals("NorthAmerica", vInstance1.region);

         rds = vInstance1._selectRegionNodes();
         assertNotNull(rds);
         assertEquals(2, rds.length);
         assertEquals("UnitedStates", rds[0].name);
         assertEquals("Canada", rds[1].name);

         vInstance1.region = "UnitedStates";
         assertEquals("UnitedStates", vInstance1.region);

         rds = vInstance1._selectRegionNodes();
         assertNotNull(rds);
         assertEquals(1, rds.length);
         assertEquals("UnitedStates", rds[0].name);

         vInstance1.region = "unknown"; // an name that does not exist
         assertEquals("unknown", vInstance1.region);

         var success = true;
         try
         {
            rds = vInstance1._selectRegionNodes();
         }
         catch (e)
         {
            success = false;
         }
         if (success)
            fail("getRegions should throw exception");

         vInstance1.region = "Japan|France";
         assertEquals("Japan|France", vInstance1.region);

         rds = vInstance1._selectRegionNodes();
         assertNotNull(rds);
         assertEquals(2, rds.length);
         assertEquals("Japan", rds[0].name);
         assertEquals("France", rds[1].name);

      }


      if (!document.referrer) // for running within a debugger, but not within the jsunit TestRunner.
      try
      {
         testCreateDefault();
         testCreateSetAllProperties();
      }
      catch (e)
      {
         window.alert(e instanceof JsUnit.Failure ? e.comment + "  " + e.jsUnitMessage : e.message);
      }

   </script>

</head>
<body>

</body>
</html>
