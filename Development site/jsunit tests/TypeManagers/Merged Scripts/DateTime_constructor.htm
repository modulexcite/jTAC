<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
   <script src="../../../jsunit/jsUnitCore.js" type="text/javascript"></script>
   <script src="../../../jsunit tests/Shared.js" type="text/javascript"></script>
   <script src="../../../jquery-globalize/globalize.js" type="text/javascript"></script>
   <script src="../../../jquery-globalize/cultures/globalize.culture.fr-FR.js" type="text/javascript"></script>
   <script src="../../../jquery-globalize/cultures/globalize.culture.en-US.js" type="text/javascript"></script>
   <script src="../../../jquery-globalize/cultures/globalize.culture.hi-IN.js" type="text/javascript"></script>
   <script src="../../../jquery-globalize/cultures/globalize.culture.ii-CN.js" type="text/javascript"></script>  
   <script src="../../../jquery-globalize/cultures/globalize.culture.quz-EC.js" type="text/javascript"></script>
   <script src="../../../jquery-globalize/cultures/globalize.culture.am-ET.js" type="text/javascript"></script>
   <script src="../../../jTAC/Merged/core.js" type="text/javascript"></script>
   <script src="../../../jTAC/Merged/typeManagers-date-time.js" type="text/javascript"></script>
   <script src="../../../jTAC-min/TypeManagers/Culture%20engine%20using%20jquery-globalize.js" type="text/javascript"></script>
   <script type="text/javascript">
      // Scripts require jsUnit. All functions that start with "test" are considered test cases. These functions cannot have any parameters.
      function testCreateDefault()
      {
         var vInstance1 = jTAC.create("TypeManagers.DateTime");   
         assertNotNull(vInstance1);

         assertEquals("", vInstance1.getCultureName());
         assertNotNull(vInstance1.dateOptions);
         assertTrue(vInstance1.dateOptions instanceof jTAC.TypeManagers.Date);
         assertEquals(0, vInstance1.dateOptions.dateFormat);
         assertNotNull(vInstance1.timeOptions);
         assertTrue(vInstance1.timeOptions instanceof jTAC.TypeManagers.TimeOfDay);
         assertEquals(0, vInstance1.timeOptions.timeFormat);

         assertTrue(vInstance1.timeRequired);
      }

      function testCreateFrench()
      {
         var vInstance1 = jTAC.create("TypeManagers.DateTime", {cultureName: "fr-FR"});   
         assertNotNull(vInstance1);
         assertEquals("fr-FR", vInstance1.cultureName);
         assertEquals("fr-FR", vInstance1.timeOptions.cultureName);
         assertEquals("fr-FR", vInstance1.timeOptions.cultureName);
      }

      function testCreateSetAllProperties()
      {
         var vInstance = jTAC.create("TypeManagers.DateTime", {cultureName: "fr-FR", dateOptions: {dateFormat: 10}, timeOptions: {timeFormat: 1}});
         assertNotNull(vInstance);
         assertEquals("fr-FR", vInstance.getCultureName());
         assertEquals(10, vInstance.dateOptions.dateFormat);
         assertEquals(1, vInstance.timeOptions.timeFormat);

      // change the properties
         vInstance.setCultureName("en-US");
         assertEquals("en-US", vInstance.getCultureName());
         vInstance.dateOptions.dateFormat = 20;
         assertEquals(20, vInstance.dateOptions.dateFormat);
         vInstance.timeOptions.timeFormat = 2;
         assertEquals(2, vInstance.timeOptions.timeFormat);

      // change properties using an object assigned to dateOptions and timeOptions
         var opts = {dateFormat: 1, twoDigitYear: false};
         vInstance.dateOptions = opts;
         assertEquals(1, vInstance.dateOptions.dateFormat);
         assertFalse(vInstance.dateOptions.twoDigitYear);

         opts = {timeFormat: 1, parseStrict : true};
         vInstance.timeOptions = opts;
         assertEquals(1, vInstance.timeOptions.timeFormat);
         assertTrue(vInstance.timeOptions.parseStrict);
      }


      if (!document.referrer) // for running within a debugger, but not within the jsunit TestRunner.
      try
      {
         testCreateDefault();
         testCreateFrench();
         testCreateSetAllProperties();
      }
      catch (e)
      {
         window.alert(e instanceof JsUnit.Failure ? e.comment + "  " + e.jsUnitMessage : e.message);
      }

   </script>

</head>
<body>

</body>
</html>
