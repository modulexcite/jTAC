<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
   <script src="../../../jsunit/jsUnitCore.js" type="text/javascript"></script>
   <script src="../../../jsunit tests/Shared.js" type="text/javascript"></script>
   <script src="../../../jquery-globalize/globalize.js" type="text/javascript"></script>
   <script src="../../../jquery-globalize/cultures/globalize.culture.fr-FR.js" type="text/javascript"></script>
   <script src="../../../jquery-globalize/cultures/globalize.culture.de-DE.js" type="text/javascript"></script>
   <script src="../../../jTAC-min/Merged/core.js" type="text/javascript"></script>
   <script src="../../../jTAC-min/Merged/typemanagers-numbers.js" type="text/javascript"></script>
   <script src="../../../jTAC-min/TypeManagers/Culture%20engine%20using%20jquery-globalize.js" type="text/javascript"></script>
   <script type="text/javascript">
      // Scripts require jsUnit. All functions that start with "test" are considered test cases. These functions cannot have any parameters.
      function testCompare()
      {
         var vInstance1 = jTAC.create("TypeManagers.Currency");
         assertNotNull(vInstance1);
         CompareMain(vInstance1, 100.12, 100.12, 0);
         CompareMain(vInstance1, 10.12, 100.12, -1);
         CompareMain(vInstance1, 1000.12, 100.12, 1);
         CompareMain(vInstance1, -1000.12, 0.12, -1);
      }

      function testCompareString()
      {
         var vInstance1 = jTAC.create("TypeManagers.Currency");
         assertNotNull(vInstance1);
         CompareMain(vInstance1, "$100.12", "$100.12", 0);
         CompareMain(vInstance1, 10.12, "$100.12", -1);   // mixed string and int
         CompareMain(vInstance1, "$1,000.12", 100.12, 1);   // mixed string and int
         CompareMain(vInstance1, "-1000.12", "$0.12", -1);
      }

      function testCompareIllegalData()
      {
         var vInstance1 = jTAC.create("TypeManagers.Currency");
         assertNotNull(vInstance1);

         var vResult = null;
         try
         {
            vResult = vInstance1.compare("01baddata", 100.12);
         }
         catch (e)
         {
         }
         if (vResult != null)
            fail("should not get here");

         vResult = null;
         try
         {
            vResult = vInstance1.compare(100.12, "01baddata");
         }
         catch (e)
         {
         }
         if (vResult != null)
            fail("should not get here");

      }

      if (!document.referrer) // for running within a debugger, but not within the jsunit TestRunner.
      try
      {
         testCompare();
         testCompareString();
         testCompareIllegalData();
      }
      catch (e)
      {
         window.alert(e instanceof JsUnit.Failure ? e.comment + "  " + e.jsUnitMessage : e.message);
      }

   </script>

</head>
<body>

</body>
</html>
