<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
   <script src="../../../jsunit/jsUnitCore.js" type="text/javascript"></script>
   <script src="../../../jsunit tests/Shared.js" type="text/javascript"></script>
   <script src="../../../jTAC-min/Merged/core.js" type="text/javascript"></script>
   <script src="../../../jTAC-min/Merged/typemanagers-numbers.js" type="text/javascript"></script>
   <script src="../../../jTAC/Cultures/fr-FR.js" type="text/javascript"></script>
   <script type="text/javascript">

      function testToValueFrench()
      {
         var vInstance1 = jTAC.create("TypeManagers.Currency", {cultureName: "fr-FR"});
         assertNotNull(vInstance1);
         var gSet = vInstance1.currencyFormat("GroupSep"); // not really a space %20, but %A0
         var valStr = "1" + gSet + "000" + gSet + "000,00 €";
         ToValueMain(vInstance1, valStr, 1000000);
         var valStr = "1" + gSet + "000,30 €";
         ToValueMain(vInstance1, valStr, 1000.30);
         ToValueMain(vInstance1, "10,12 €", 10.12);
         ToValueMain(vInstance1, "10,12€", 10.12);
         ToValueMain(vInstance1, "€10,12", 10.12);
         ToValueMain(vInstance1, "-10,12 €", -10.12);

         ToIllegalValueMain(vInstance1, "1.000.000"); //  illegal thousands and decimal separators
         ToIllegalValueMain(vInstance1, "01baddata");
         ToIllegalValueMain(vInstance1, "(10,12 €)");
         ToIllegalValueMain(vInstance1, "10.12 €");

         vInstance1.acceptPeriodAsDecSep = true;
         ToValueMain(vInstance1, "10.12 €", 10.12);

      }

      if (!document.referrer) // for running within a debugger, but not within the jsunit TestRunner.
      try
      {
         testToValueFrench();
      }
      catch (e)
      {
         window.alert(e instanceof JsUnit.Failure ? e.comment + "  " + e.jsUnitMessage : e.message);
      }

   </script>

</head>
<body>

</body>
</html>
