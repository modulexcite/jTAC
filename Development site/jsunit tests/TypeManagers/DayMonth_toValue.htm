<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
   <script src="../../jsunit/jsUnitCore.js" type="text/javascript"></script>
   <script src="../../jsunit tests/Shared.js" type="text/javascript"></script>
   <script src="../../jTAC/jTAC.js" type="text/javascript"></script>
   <script src="../../jTAC/TypeManagers/Base.js" type="text/javascript"></script>
   <script src="../../jTAC/TypeManagers/BaseCulture.js" type="text/javascript"></script>
   <script src="../../jTAC/TypeManagers/Culture%20engine%20using%20jquery-globalize.js" type="text/javascript"></script>
   <script src="../../jTAC/TypeManagers/BaseDatesAndTimes.js" type="text/javascript"></script>
   <script src="../../jTAC/TypeManagers/BaseDate.js" type="text/javascript"></script>
   <script src="../../jTAC/TypeManagers/DayMonth.js" type="text/javascript"></script>
   <script src="../../jquery-globalize/globalize.js" type="text/javascript"></script>
   <script src="../../jquery-globalize/cultures/globalize.culture.fr-FR.js" type="text/javascript"></script>
   <script src="../../jquery-globalize/cultures/globalize.culture.en-US.js" type="text/javascript"></script>
   <script src="../../jquery-globalize/cultures/globalize.culture.hi-IN.js" type="text/javascript"></script>
   <script src="../../jquery-globalize/cultures/globalize.culture.ii-CN.js" type="text/javascript"></script>  
   <script src="../../jquery-globalize/cultures/globalize.culture.quz-EC.js" type="text/javascript"></script>
   <script src="../../jquery-globalize/cultures/globalize.culture.am-ET.js" type="text/javascript"></script>
   <script src="../../jTAC/TypeManagers/Culture%20engine%20using%20jquery-globalize.js" type="text/javascript"></script>
   <script type="text/javascript">
      // Scripts require jsUnit. All functions that start with "test" are considered test cases. These functions cannot have any parameters.

      function severalDates(instance, pattern)
      {
         pattern = pattern.replace(/'/g, "");
         // reminder: day of month is ignored here
         var date1 = new Date(1900, 0, 1);   // parser internally uses 1900 to replace the year
         ToValueForDates(instance, UpdatePatternWithDate(instance, pattern, date1), date1);
         var date2 = new Date(1900, 11, 31);
         ToValueForDates(instance, UpdatePatternWithDate(instance, pattern, date2), date2);
         var date3 = new Date(1900, 7, 14);
         ToValueForDates(instance, UpdatePatternWithDate(instance, pattern, date3), date3);
         var date4 = new Date(1900, 4, 31);
         ToValueForDates(instance, UpdatePatternWithDate(instance, pattern, date4), date4);
         var date5 = new Date(1900, 1, 29);
         ToValueForDates(instance, UpdatePatternWithDate(instance, pattern, date5), date5);
         var date6 = new Date(1900, 8, 9);
         ToValueForDates(instance, UpdatePatternWithDate(instance, pattern, date6), date6);
      }
      function testToValue()
      {
         var vInstance1 = jTAC.create("TypeManagers.DayMonth");
         assertNotNull(vInstance1);
         severalDates(vInstance1, "M/d");
         ToIllegalValueMain(vInstance1, "21/1900");
         ToIllegalValueMain(vInstance1, "14/2");
         ToIllegalValueMain(vInstance1, "12/42");
         ToIllegalValueMain(vInstance1, "1/");
         ToIllegalValueMain(vInstance1, "1/205");
         ToIllegalValueMain(vInstance1, "/1/20");
         ToIllegalValueMain(vInstance1, "/");
         ToIllegalValueMain(vInstance1, "//");
         ToIllegalValueMain(vInstance1, "1 /19");
         ToIllegalValueMain(vInstance1, "1/ 19");
         ToIllegalValueMain(vInstance1, "Jan/19");
         assertNull(vInstance1.toValue(""));


/* NOT AVAILABLE WITH THE DEFAULT PARSER
         vInstance1.setDateFormat(1);
         severalDates(vInstance1, "MMM/d");
         ToValueForDates(vInstance1, "FEB/1", new Date(2012, 1, 1));
         ToValueForDates(vInstance1, "FEB/01", new Date(2012, 1, 1));

         ToIllegalValueMain(vInstance1, "J/19");
         ToIllegalValueMain(vInstance1, "Ja/19");
         ToIllegalValueMain(vInstance1, "January/19");
         ToIllegalValueMain(vInstance1, "Jank/19");
         ToIllegalValueMain(vInstance1, "Feb/190");

         vInstance1.setDateFormat(2);
         severalDates(vInstance1, "MMM/d");   // same as 1.
         ToValueForDates(vInstance1, "FEB/1", new Date(2012, 1, 1));
         ToValueForDates(vInstance1, "feb/1", new Date(2012, 1, 1));

         vInstance1.setDateFormat(10);
         severalDates(vInstance1, "MMM dd");
         ToValueForDates(vInstance1, "feb 01", new Date(2012, 1, 1));
         ToValueForDates(vInstance1, "FEB 01", new Date(2012, 1, 1));
         ToValueForDates(vInstance1, "FEB 1", new Date(2012, 1, 1));
         ToValueForDates(vInstance1, "FEB    01", new Date(2012, 1, 1));

         ToIllegalValueMain(vInstance1, "Feb 40");
         ToIllegalValueMain(vInstance1, "J 01");
         ToIllegalValueMain(vInstance1, "Ja 01");
         ToIllegalValueMain(vInstance1, "January 01");
         ToIllegalValueMain(vInstance1, "Jank 01");

         ToIllegalValueMain(vInstance1, "20 Apr");
         ToIllegalValueMain(vInstance1, "1, 20");
         ToIllegalValueMain(vInstance1, "1 1");
         ToIllegalValueMain(vInstance1, "Apr");
         ToIllegalValueMain(vInstance1, "April");
         ToIllegalValueMain(vInstance1, "20");

         vInstance1.setDateFormat(20);
         severalDates(vInstance1, "MMMM dd");
         ToValueForDates(vInstance1, "february 01", new Date(2012, 1, 1));
         ToValueForDates(vInstance1, "FEBRUARY 01", new Date(2012, 1, 1));
         ToValueForDates(vInstance1, "February 1", new Date(2012, 1, 1));

         ToIllegalValueMain(vInstance1, "February 40");
         ToIllegalValueMain(vInstance1, "J 01");
         ToIllegalValueMain(vInstance1, "Ja 01");
         ToIllegalValueMain(vInstance1, "Jan 01");
         ToIllegalValueMain(vInstance1, "Januaryk 01");
         ToIllegalValueMain(vInstance1, "January, 01");

         ToIllegalValueMain(vInstance1, "20 April");
         ToIllegalValueMain(vInstance1, "1 20");
         ToIllegalValueMain(vInstance1, "Apr");
         ToIllegalValueMain(vInstance1, "April");
         ToIllegalValueMain(vInstance1, "20");
*/
         vInstance1.setDateFormat(100);
         severalDates(vInstance1, "MM-dd");
      }

      function testToValueFrench()
      {
         var vInstance1 = jTAC.create("TypeManagers.DayMonth", {cultureName: "fr-FR"});
         assertNotNull(vInstance1);
         severalDates(vInstance1, "dd/MM");
/* NOT AVAILABLE WITH THE DEFAULT PARSER

         vInstance1.setDateFormat(1);
         severalDates(vInstance1, "dd/MMM");

         vInstance1.setDateFormat(2);
         severalDates(vInstance1, "dd/MMM");   // same as 1.

         vInstance1.setDateFormat(10);
         severalDates(vInstance1, "d MMM");

         vInstance1.setDateFormat(20);
         severalDates(vInstance1, "d MMMM");
*/
         vInstance1.setDateFormat(100);
         severalDates(vInstance1, "MM-dd");
      }

      function testToValueHindi()
      {
         var vInstance1 = jTAC.create("TypeManagers.DayMonth", {cultureName: "hi-IN"});
         assertNotNull(vInstance1);
         severalDates(vInstance1, "dd-MM");
/* NOT AVAILABLE WITH THE DEFAULT PARSER

         vInstance1.setDateFormat(1);
         severalDates(vInstance1, "dd-MMM");

         vInstance1.setDateFormat(2);
         severalDates(vInstance1, "dd-MMM");   // same as 1.

         vInstance1.setDateFormat(10);
         severalDates(vInstance1, "dd MMM");

         vInstance1.setDateFormat(20);
         severalDates(vInstance1, "dd MMMM");
*/
         vInstance1.setDateFormat(100);
         severalDates(vInstance1, "MM-dd");
      }

      function testToValueChinese()
      {
         var vInstance1 = jTAC.create("TypeManagers.DayMonth", {cultureName: "ii-CN"});
         assertNotNull(vInstance1);
         severalDates(vInstance1, "M/d");
/* NOT AVAILABLE WITH THE DEFAULT PARSER

         vInstance1.setDateFormat(1);
         severalDates(vInstance1, "MMM/d");

         vInstance1.setDateFormat(2);
         severalDates(vInstance1, "MMM/d");   // same as 1.

         // chinese uses the month number, not name
         vInstance1.setDateFormat(10);
         severalDates(vInstance1, "M'ꆪ' d'ꑍ'");

         vInstance1.setDateFormat(20);
         severalDates(vInstance1, "M'ꆪ' d'ꑍ'");
*/
         vInstance1.setDateFormat(100);
         severalDates(vInstance1, "MM-dd");
      }

      function testToValueEcuador()
      {
         var vInstance1 = jTAC.create("TypeManagers.DayMonth", {cultureName: "quz-EC"});
         assertNotNull(vInstance1);
         severalDates(vInstance1, "dd/MM");
/* NOT AVAILABLE WITH THE DEFAULT PARSER

         vInstance1.setDateFormat(1);
         severalDates(vInstance1, "dd/MMM");

         vInstance1.setDateFormat(2);
         severalDates(vInstance1, "dd/MMM");   // same as 1.

         // does not have a localized format for month day so it uses the US format of MMMM dd
         vInstance1.setDateFormat(10);
         ToValueForDates(vInstance1, "Qul 01", new Date(2012, 0, 1));

         vInstance1.setDateFormat(20);
         ToValueForDates(vInstance1, "Qulla puquy 01", new Date(2012, 0, 1));
*/
         vInstance1.setDateFormat(100);
         severalDates(vInstance1, "MM-dd");
      }

      function testToValueEthiopia()
      {
         var vInstance1 = jTAC.create("TypeManagers.DayMonth", {cultureName: "am-ET"});
         assertNotNull(vInstance1);
         severalDates(vInstance1, "d/M");
/* NOT AVAILABLE WITH THE DEFAULT PARSER

         vInstance1.setDateFormat(1);
         severalDates(vInstance1, "d/MMM");

         vInstance1.setDateFormat(2);
         severalDates(vInstance1, "d/MMM");   // same as 1.

         vInstance1.setDateFormat(10);
         severalDates(vInstance1, "MMM d 'ቀን'");

         vInstance1.setDateFormat(20);
         severalDates(vInstance1, "MMMM d 'ቀን'");
*/
         vInstance1.setDateFormat(100);
         severalDates(vInstance1, "MM-dd");
      }


      if (!document.referrer) // for running within a debugger, but not within the jsunit TestRunner.
      try
      {
         testToValue();
         testToValueFrench();
         testToValueHindi();
         testToValueChinese();
         testToValueEcuador();
         testToValueEthiopia();
      }
      catch (e)
      {
         window.alert(e instanceof JsUnit.Failure ? e.comment + "  " + e.jsUnitMessage : e.message);
      }
   </script>

</head>
<body>

</body>
</html>
