<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
   <script src="../../jsunit/jsUnitCore.js" type="text/javascript"></script>
   <script src="../../jsunit tests/Shared.js" type="text/javascript"></script>
   <script src="../../jTAC/jTAC.js" type="text/javascript"></script>
   <script src="../../jTAC/TypeManagers/Base.js" type="text/javascript"></script>
   <script src="../../jTAC/TypeManagers/BaseString.js" type="text/javascript"></script>
   <script src="../../jTAC/TypeManagers/BaseStrongPatternString.js" type="text/javascript"></script>
   <script src="../../jTAC/TypeManagers/EmailAddress.js" type="text/javascript"></script>
   <script type="text/javascript">
      // Scripts require jsUnit. All functions that start with "test" are considered test cases. These functions cannot have any parameters.
      function testToValue()
      {
         var vInstance1 = jTAC.create("TypeManagers.EmailAddress");
         assertNotNull(vInstance1);
         ToValueMain(vInstance1, "", "");
         ToValueMain(vInstance1, "p@b.com", "p@b.com");
         ToValueMain(vInstance1, "a124@domain.net", "a124@domain.net");
         ToValueMain(vInstance1, "joe's_garage@zappa.mus", "joe's_garage@zappa.mus");
         ToValueMain(vInstance1, "1abc@b.com", "1abc@b.com");

         ToIllegalValueMain(vInstance1, 1);
         ToIllegalValueMain(vInstance1, "1");
         ToIllegalValueMain(vInstance1, "mailto://p@b.com");
         ToIllegalValueMain(vInstance1, "a @b.com");
         ToIllegalValueMain(vInstance1, "a@ b.com");
         ToIllegalValueMain(vInstance1, "a@b. com");
         ToIllegalValueMain(vInstance1, "a@b._");
         ToIllegalValueMain(vInstance1, "a@@b.com");
         ToIllegalValueMain(vInstance1, "a@bcd@efg.com");
         ToIllegalValueMain(vInstance1, "a@b.com;");
         ToIllegalValueMain(vInstance1, "a@b.com;c@d.com");

      }

      function testMultiple()
      {
         var vInstance1 = jTAC.create("TypeManagers.EmailAddress");
         assertNotNull(vInstance1);
         vInstance1.multiple = true;
         ToValueMain(vInstance1, "", "");
         ToValueMain(vInstance1, "p@b.com", "p@b.com");
         ToValueMain(vInstance1, "a124@domain.net", "a124@domain.net");
         ToValueMain(vInstance1, "joe's_garage@zappa.mus", "joe's_garage@zappa.mus");
         ToValueMain(vInstance1, "p@b.com;p@b.com", "p@b.com;p@b.com");
         ToValueMain(vInstance1, "p@b.com; p@b.com", "p@b.com; p@b.com");
         ToValueMain(vInstance1, "p@b.com; p@b.com; p@b.com", "p@b.com; p@b.com; p@b.com");
         vInstance1.delimiterRE = ";";
         ToValueMain(vInstance1, "p@b.com;p@b.com;p@b.com", "p@b.com;p@b.com;p@b.com");
         ToIllegalValueMain(vInstance1, "p@b.com; p@b.com");
         ToIllegalValueMain(vInstance1, "p@b.com|p@b.com");
         vInstance1.delimiterRE = "\\|";
         ToValueMain(vInstance1, "p@b.com|p@b.com", "p@b.com|p@b.com");
         vInstance1.delimiterRE = "[ ]?\\|[ ]*";
         ToValueMain(vInstance1, "p@b.com|p@b.com", "p@b.com|p@b.com");
         ToValueMain(vInstance1, "p@b.com |p@b.com", "p@b.com |p@b.com");
         ToValueMain(vInstance1, "p@b.com|  p@b.com", "p@b.com|  p@b.com");

      }

      if (!document.referrer) // for running within a debugger, but not within the jsunit TestRunner.
      try
      {
         testToValue();
         testMultiple();
      }
      catch (e)
      {
         window.alert(e instanceof JsUnit.Failure ? e.comment + "  " + e.jsUnitMessage : e.message);
      }

   </script>

</head>
<body>

</body>
</html>
