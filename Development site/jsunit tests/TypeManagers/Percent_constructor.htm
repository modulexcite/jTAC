<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
   <script src="../../jsunit/jsUnitCore.js" type="text/javascript"></script>
   <script src="../../jTAC/jTAC.js" type="text/javascript"></script>
   <script src="../../jTAC/TypeManagers/Base.js" type="text/javascript"></script>
   <script src="../../jTAC/TypeManagers/BaseCulture.js" type="text/javascript"></script>
   <script src="../../jTAC/TypeManagers/BaseNumber.js" type="text/javascript"></script>
   <script src="../../jTAC/TypeManagers/BaseFloat.js" type="text/javascript"></script>
   <script src="../../jTAC/TypeManagers/Percent.js" type="text/javascript"></script>
   <script src="../../jquery-globalize/globalize.js" type="text/javascript"></script>
   <script src="../../jquery-globalize/cultures/globalize.culture.fr-FR.js" type="text/javascript"></script>
   <script src="../../jquery-globalize/cultures/globalize.culture.en-US.js" type="text/javascript"></script>
   <script src="../../jTAC/TypeManagers/Culture%20engine%20using%20jquery-globalize.js" type="text/javascript"></script>
   <script type="text/javascript">
      // Scripts require jsUnit. All functions that start with "test" are considered test cases. These functions cannot have any parameters.
      function testCreateDefault()
      {
         var vInstance1 = jTAC.create("TypeManagers.Percent");
         assertNotNull(vInstance1);
         assertEquals("", vInstance1.getCultureName());
         assertTrue(vInstance1.allowNegatives);
         assertTrue(vInstance1.showGroupSep);
         assertTrue(vInstance1.allowPercentSymbol);
         assertNull(vInstance1.maxDecimalPlaces); // en uses 2 decimal places
         assertNull(vInstance1.roundMode);
         assertTrue(vInstance1.showPercentSymbol);
         assertEquals(2, vInstance1.trailingZeroDecimalPlaces);
         assertTrue(vInstance1.oneEqualsOneHundred);
         assertTrue(vInstance1.allowGroupSep);
         assertFalse(vInstance1.acceptPeriodAsDecSep);
         assertFalse(vInstance1.strictSymbols);

      }

      function testCreateFrench()
      {
         var vInstance1 = jTAC.create("TypeManagers.Percent", {cultureName: "fr-FR"});
         assertNotNull(vInstance1);
         assertEquals("fr-FR", vInstance1.getCultureName());
         assertTrue(vInstance1.getAllowNegatives());
      }

      function testCreateSetAllProperties()
      {
         var vInstance1 = jTAC.create("TypeManagers.Percent", {cultureName: "fr-FR"});
         assertNotNull(vInstance1);
         assertEquals("fr-FR", vInstance1.getCultureName());
      // change the properties
         vInstance1.setCultureName("en-US");
         assertEquals("en-US", vInstance1.getCultureName());
         vInstance1.allowNegatives = false;
         assertFalse(vInstance1.allowNegatives);

         vInstance1.showGroupSep = false;
         assertFalse("ShowGroupSeparator must be false", vInstance1.showGroupSep);
         vInstance1.allowPercentSymbol = false;
         assertFalse(vInstance1.allowPercentSymbol);
         vInstance1.maxDecimalPlaces = 4;
         assertEquals(4, vInstance1.maxDecimalPlaces);
         vInstance1.roundMode = 2;
         assertEquals(2, vInstance1.roundMode);
         vInstance1.showPercentSymbol = false;
         assertFalse(vInstance1.showPercentSymbol);
         vInstance1.showGroupSep = false;
         assertFalse(vInstance1.showGroupSep);
         vInstance1.trailingZeroDecimalPlaces = 3;
         assertEquals(3, vInstance1.trailingZeroDecimalPlaces);
         vInstance1.oneEqualsOneHundred = false;
         assertFalse(vInstance1.oneEqualsOneHundred);
         vInstance1.allowGroupSep = false;
         assertFalse(vInstance1.allowGroupSep);
         vInstance1.acceptPeriodAsDecSep = true;
         assertTrue(vInstance1.acceptPeriodAsDecSep);
         vInstance1.strictSymbols = true;
         assertTrue(vInstance1.strictSymbols);

      }
      if (!document.referrer) // for running within a debugger, but not within the jsunit TestRunner.
      try
      {
         testCreateDefault();
         testCreateFrench();
         testCreateSetAllProperties();
      }
      catch (e)
      {
         window.alert(e instanceof JsUnit.Failure ? e.comment + "  " + e.jsUnitMessage : e.message);
      }

   </script>

</head>
<body>

</body>
</html>
