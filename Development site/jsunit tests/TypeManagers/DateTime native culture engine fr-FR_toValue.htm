<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
   <script src="../../jsunit/jsUnitCore.js" type="text/javascript"></script>
   <script src="../../jsunit tests/Shared.js" type="text/javascript"></script>
   <script src="../../jTAC/jTAC.js" type="text/javascript"></script>
   <script src="../../jTAC/TypeManagers/Base.js" type="text/javascript"></script>
   <script src="../../jTAC/TypeManagers/BaseCulture.js" type="text/javascript"></script>
   <script src="../../jTAC/TypeManagers/BaseDatesAndTimes.js" type="text/javascript"></script>
   <script src="../../jTAC/TypeManagers/BaseDate.js" type="text/javascript"></script>
   <script src="../../jTAC/TypeManagers/BaseTime.js" type="text/javascript"></script>
   <script src="../../jTAC/TypeManagers/Date.js" type="text/javascript"></script>
   <script src="../../jTAC/TypeManagers/TimeOfDay.js" type="text/javascript"></script>
   <script src="../../jTAC/TypeManagers/DateTime.js" type="text/javascript"></script>
   <script src="../../jTAC/Cultures/fr-FR.js" type="text/javascript"></script>

</head>
<body>
   <script type="text/javascript">
      // Scripts require jsUnit. All functions that start with "test" are considered test cases. These functions cannot have any parameters.
      function severalDates(instance, pattern)
      {
         pattern = pattern.replace(/'/g, "");
         var date1 = new Date(2012, 0, 1, 0, 0, 0);
         ToValueForDates(instance, UpdatePatternWithDateTime(instance, pattern, date1), date1);
         var date2 = new Date(2005, 11, 31, 23, 59, 59);
         ToValueForDates(instance, UpdatePatternWithDateTime(instance, pattern, date2), date2);
         var date3 = new Date(1980, 7, 10, 10, 40, 20);
         ToValueForDates(instance, UpdatePatternWithDateTime(instance, pattern, date3), date3);
         var date4 = new Date(1965, 4, 31, 16, 36, 0);
         ToValueForDates(instance, UpdatePatternWithDateTime(instance, pattern, date4), date4);
         var date5 = new Date(2100, 1, 9, 12, 0, 0);
         ToValueForDates(instance, UpdatePatternWithDateTime(instance, pattern, date5), date5);
         var date6 = new Date(2000, 8, 29, 19, 25, 59);
         ToValueForDates(instance, UpdatePatternWithDateTime(instance, pattern, date6), date6);
      }

      function testToValueFrench()
      {
         var vInstance1 = jTAC.create("TypeManagers.DateTime", { cultureName: "fr-FR" });   // DateFormat = 20, FallbackDateFormats = null, TimeFormat= 0
         assertNotNull(vInstance1);
         vInstance1.dateOptions.setDateFormat(0);
         vInstance1.timeOptions.setTimeFormat(0);
         severalDates(vInstance1, "dd/MM/yyyy HH:mm:ss");

         vInstance1.dateOptions.setDateFormat(0);
         vInstance1.timeOptions.setTimeFormat(1);
         severalDates(vInstance1, "dd/MM/yyyy HH:mm");
/* CANNOT PARSE THESE WITH THE DEFAULT PARSER. REQUIRES ANOTHER PARSER

         vInstance1.dateOptions.setDateFormat(1);
         vInstance1.timeOptions.setTimeFormat(0);
         severalDates(vInstance1, "dd/MMM/yyyy HH:mm:ss");

         vInstance1.dateOptions.setDateFormat(2);
         vInstance1.timeOptions.setTimeFormat(0);
         severalDates(vInstance1, "dd/MMM/yyyy HH:mm:ss");   // same as 1.

         vInstance1.dateOptions.setDateFormat(10);
         vInstance1.timeOptions.setTimeFormat(0);
         severalDates(vInstance1, "d MMM yyyy HH:mm:ss");

         vInstance1.dateOptions.setDateFormat(10);
         vInstance1.timeOptions.setTimeFormat(1);
         severalDates(vInstance1, "d MMM yyyy HH:mm");

         vInstance1.dateOptions.setDateFormat(20);
         vInstance1.timeOptions.setTimeFormat(0);
         severalDates(vInstance1, "d MMMM yyyy HH:mm:ss");

         vInstance1.dateOptions.setDateFormat(20);
         vInstance1.timeOptions.setTimeFormat(1);
         severalDates(vInstance1, "d MMMM yyyy HH:mm");
*/
         vInstance1.dateOptions.setDateFormat(100);
         vInstance1.timeOptions.setTimeFormat(0);
         severalDates(vInstance1, "yyyy-MM-dd HH:mm:ss");

         vInstance1.dateOptions.setDateFormat(100);
         vInstance1.timeOptions.setTimeFormat(100);
         severalDates(vInstance1, "yyyy-MM-dd HH:mm:ss");

         vInstance1.dateOptions.setDateFormat(100);
         vInstance1.timeOptions.setTimeFormat(101);
         severalDates(vInstance1, "yyyy-MM-dd HH:mm");
      }

      if (!document.referrer) // for running within a debugger, but not within the jsunit TestRunner.
      try
      {
         testToValueFrench();
      }
      catch (e)
      {
         window.alert(e instanceof JsUnit.Failure ? e.comment + "  " + e.jsUnitMessage : e.message);
      }
   </script>

</body>
</html>
