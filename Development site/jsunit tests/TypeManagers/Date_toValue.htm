<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
   <script src="../../jsunit/jsUnitCore.js" type="text/javascript"></script>
   <script src="../../jsunit tests/Shared.js" type="text/javascript"></script>
   <script src="../../jTAC/jTAC.js" type="text/javascript"></script>
   <script src="../../jTAC/TypeManagers/Base.js" type="text/javascript"></script>
   <script src="../../jTAC/TypeManagers/BaseCulture.js" type="text/javascript"></script>
   <script src="../../jTAC/TypeManagers/BaseDatesAndTimes.js" type="text/javascript"></script>
   <script src="../../jTAC/TypeManagers/BaseDate.js" type="text/javascript"></script>
   <script src="../../jTAC/TypeManagers/Date.js" type="text/javascript"></script>
   <script src="../../jquery-globalize/globalize.js" type="text/javascript"></script>
   <script src="../../jquery-globalize/cultures/globalize.culture.fr-FR.js" type="text/javascript"></script>
   <script src="../../jquery-globalize/cultures/globalize.culture.en-US.js" type="text/javascript"></script>
   <script src="../../jquery-globalize/cultures/globalize.culture.hi-IN.js" type="text/javascript"></script>
   <script src="../../jquery-globalize/cultures/globalize.culture.ii-CN.js" type="text/javascript"></script>  
   <script src="../../jquery-globalize/cultures/globalize.culture.quz-EC.js" type="text/javascript"></script>
   <script src="../../jquery-globalize/cultures/globalize.culture.am-ET.js" type="text/javascript"></script>
   <script src="../../jTAC/TypeManagers/Culture%20engine%20using%20jquery-globalize.js" type="text/javascript"></script>
   <script type="text/javascript">
      // Scripts require jsUnit. All functions that start with "test" are considered test cases. These functions cannot have any parameters.

      function severalDates(instance, pattern)
      {
         pattern = pattern.replace(/'/g, "");
         var date1 = new Date(2012, 0, 1);
         ToValueForDates(instance, UpdatePatternWithDate(instance, pattern, date1), date1);
         var date2 = new Date(2005, 11, 31);
         ToValueForDates(instance, UpdatePatternWithDate(instance, pattern, date2), date2);
         var date3 = new Date(1980, 7, 10);
         ToValueForDates(instance, UpdatePatternWithDate(instance, pattern, date3), date3);
         var date4 = new Date(1965, 4, 31);
         ToValueForDates(instance, UpdatePatternWithDate(instance, pattern, date4), date4);
         var date5 = new Date(2100, 1, 9);
         ToValueForDates(instance, UpdatePatternWithDate(instance, pattern, date5), date5);
         var date6 = new Date(2000, 8, 29);
         ToValueForDates(instance, UpdatePatternWithDate(instance, pattern, date6), date6);
      }

      function testToValue()
      {
         var vInstance1 = jTAC.create("TypeManagers.Date");   
         assertNotNull(vInstance1);
         severalDates(vInstance1, "M/d/yyyy");
         ToIllegalValueMain(vInstance1, "21/1/1900");
         ToIllegalValueMain(vInstance1, "1/41/1900");
         ToIllegalValueMain(vInstance1, "1/1/19000");
         ToIllegalValueMain(vInstance1, "1/20/");
         ToIllegalValueMain(vInstance1, "1/20");
         ToIllegalValueMain(vInstance1, "/1/20");
         ToIllegalValueMain(vInstance1, "/");
         ToIllegalValueMain(vInstance1, "//");
         ToIllegalValueMain(vInstance1, "1/ 1/1900");
         ToIllegalValueMain(vInstance1, "1 /1/1900");
         ToIllegalValueMain(vInstance1, "1/1/ 1900");
         ToIllegalValueMain(vInstance1, "Jan/1/1900");
         ToIllegalValueMain(vInstance1, "2011-01-01"); 
         ToIllegalValueMain(vInstance1, "01-01-2011"); 
         assertNull(vInstance1.toValue(""));

         var date6 = new Date(2000, 8, 29);
         ToValueForDates(vInstance1, "9/29/00", date6);
         vInstance1.twoDigitYear = false;
         ToIllegalValueMain(vInstance1, "9/29/00");
      }

      function testToNeutralValue()
      {
         function severalDatesNeutral(instance)
         {
            var pattern = "yyyy-MM-dd";
            var date1 = new Date(2012, 0, 1);
            ToValueNeutralForDates(instance, UpdatePatternWithDate(instance, pattern, date1), date1);
            var date2 = new Date(2005, 11, 31);
            ToValueNeutralForDates(instance, UpdatePatternWithDate(instance, pattern, date2), date2);
            var date3 = new Date(1980, 7, 10);
            ToValueNeutralForDates(instance, UpdatePatternWithDate(instance, pattern, date3), date3);
            var date4 = new Date(1965, 4, 31);
            ToValueNeutralForDates(instance, UpdatePatternWithDate(instance, pattern, date4), date4);
            var date5 = new Date(2100, 1, 9);
            ToValueNeutralForDates(instance, UpdatePatternWithDate(instance, pattern, date5), date5);
            var date6 = new Date(2000, 8, 29);
            ToValueNeutralForDates(instance, UpdatePatternWithDate(instance, pattern, date6), date6);
         }

         var vInstance1 = jTAC.create("TypeManagers.Date");   
         assertNotNull(vInstance1);
         severalDatesNeutral(vInstance1);
         ToValueNeutralForDates(vInstance1, "2012-1-1", new Date(2012, 0, 1));
         ToIllegalValueNeutralMain(vInstance1, "2012/01/01");
         ToIllegalValueNeutralMain(vInstance1, "2012-001-001");
         ToIllegalValueNeutralMain(vInstance1, "2012-13-01");
         ToIllegalValueNeutralMain(vInstance1, "2012-01-32");
         ToIllegalValueNeutralMain(vInstance1, "12-01-01");
         ToIllegalValueNeutralMain(vInstance1, "01-01-2012");
         ToIllegalValueNeutralMain(vInstance1, "2012-01");
         ToIllegalValueNeutralMain(vInstance1, "2012-01");
         ToIllegalValueNeutralMain(vInstance1, "2012--01");
         ToIllegalValueNeutralMain(vInstance1, "-");
         ToIllegalValueNeutralMain(vInstance1, "2012- 01-01");
         ToIllegalValueNeutralMain(vInstance1, "2012-01 -01");
         ToIllegalValueNeutralMain(vInstance1, "2012-Ja-01"); 
         assertNull(vInstance1.toValueNeutral(""));

      }

      function testUTC()
      {
         var vInstance1 = jTAC.create("TypeManagers.Date");   
         assertNotNull(vInstance1);
         setPropertyValue(vInstance1, "useUTC", true);
         var date1 = jTAC.TypeManagers.BaseDatesAndTimes.prototype.asUTCDate(2012, 0, 1);
         ToValueForDates(vInstance1, "01/01/2012", date1);
      }

      function testToValueFrench()
      {
         var vInstance1 = jTAC.create("TypeManagers.Date", {cultureName: "fr-FR"});   
         assertNotNull(vInstance1);
         severalDates(vInstance1, "dd/MM/yyyy");
      }

      function testToValueHindi()
      {
         var vInstance1 = jTAC.create("TypeManagers.Date", {cultureName: "hi-IN"});   
         assertNotNull(vInstance1);
         severalDates(vInstance1, "dd-MM-yyyy");
      }

      function testToValueChinese()
      {
         var vInstance1 = jTAC.create("TypeManagers.Date", {cultureName: "ii-CN"});   
         assertNotNull(vInstance1);
         severalDates(vInstance1, "yyyy/M/d");
      }

      function testToValueEcuador()
      {
         var vInstance1 = jTAC.create("TypeManagers.Date", {cultureName: "quz-EC"});   
         assertNotNull(vInstance1);
         severalDates(vInstance1, "dd/MM/yyyy");
      }

      function testToValueEthiopia()
      {
         var vInstance1 = jTAC.create("TypeManagers.Date", {cultureName: "am-ET"});   
         assertNotNull(vInstance1);
         severalDates(vInstance1, "d/M/yyyy");

      }

      if (!document.referrer) // for running within a debugger, but not within the jsunit TestRunner.
      try
      {
         testToValue();
         testToNeutralValue();
         testUTC();
         testToValueFrench();
         testToValueHindi();
         testToValueChinese();
         testToValueEcuador();
         testToValueEthiopia();
      }
      catch (e)
      {
         window.alert(e instanceof JsUnit.Failure ? e.comment + "  " + e.jsUnitMessage : e.message);
      }
   </script>

</head>
<body>

</body>
</html>
