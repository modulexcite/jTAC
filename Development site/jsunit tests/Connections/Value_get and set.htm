<!DOCTYPE html>
<html>
<head>
    <title></title>
   <script src="../../jsunit/jsUnitCore.js" type="text/javascript"></script>
   <script src="../../jsunit tests/Shared.js" type="text/javascript"></script>
   <script src="../../jquery-globalize/globalize.js" type="text/javascript"></script>
   <script src="../../jquery-globalize/cultures/globalize.culture.fr-FR.js" type="text/javascript"></script>
   <script src="../../jquery-globalize/cultures/globalize.culture.en-US.js" type="text/javascript"></script>
   <script src="../../jTAC/jTAC.js" type="text/javascript"></script> 
   <script src="../../jTAC/Connections/Base.js" type="text/javascript"></script>
   <script src="../../jTAC/Connections/Value.js" type="text/javascript"></script>

</head>
<body>

   <form id="Form1" method="post" action="Connections_get and set.htm" >

      <input type="text" id="Text1" name="Text1" />
      <input type="checkbox" id="CheckBox1" />
      <input type="radio" id="Radio1" />
      <select id="Select1">
         <option value="one">1</option>
         <option value="two">2</option>
         <option value="three">3</option>
      </select>
      <select id="MultiSelect1" multiple="multiple">
         <option value="one">1</option>
         <option value="two">2</option>
         <option value="three">3</option>
      </select>
      <br />
      <textarea id="TextArea1" rows="5" cols="200" ></textarea>

      <br />
      HTML 5 support. (Try Opera as it supports these)<br />
      <input type="date" id="Date1" /> 
      <input type="datetime" id="DateTime1" /> 
      <input type="time" id="Time1" /> 
      <input type="month" id="Month1" /> 
      <input type="number" id="Number1" />
      <input type="range" id="Range1" />
      <br />
      Radio list:<input type="radio" id="RadioList1" name="Group1" checked="checked" />
      <input type="radio" id="RadioList2" name="Group1" />
      <input type="radio" id="RadioList3" name="Group1" />
      <br />
      Checkbox list:<input type="checkbox" id="CheckBoxList1" />
      <input type="checkbox" id="CheckBoxList2" checked="checked" />
      <input type="checkbox" id="CheckBoxList3" />

   </form>

   <script type="text/javascript">
      // Scripts require jsUnit. All functions that start with "test" are considered test cases. These functions cannot have any parameters.

      function testValueConnectionInt()
      {
         var vInstance1 = jTAC.create("Connections.Value");
         assertNotNull(vInstance1);
         vInstance1.value = 4;
         if (vInstance1.typeSupported("integer"))
         {
            assertEquals(4, vInstance1.getTypedValue());
            vInstance1.setTypedValue(10);
            assertEquals(10, vInstance1.getTypedValue());
         }
         else
            fail("Must be supported");
      }
      function testValueConnectionString()
      {

         var vInstance2 = jTAC.create("Connections.Value", {value: "textvalue"});
         assertNotNull(vInstance2);
         var val = vInstance2.getTypedValue();   // should succeed because its type is unspecified
         assertEquals("textvalue", val);
         vInstance2.setTypedValue("second value");
         assertEquals("second value", vInstance2.getTypedValue());
         var vSuccess = false;
         try
         {
            vInstance2.getTypedValue("integer");   // should fail for string type
         }
         catch (e)
         {
            vSuccess = true;
         }
         if (!vSuccess)
            fail("getTypeValue should report an error because its a string type value.");
         assertEquals("second value", vInstance2.getTextValue());
         vInstance2.setTextValue("third value");
         assertEquals("third value", vInstance2.getTextValue());
/* currently setTypedValue permits any type value, even if _supportsNameType is assigned.
         vSuccess = false;
         try
         {
            vInstance2.setTypedValue(4);   // should fail because _supportsNamedType is not assigned
         }
         catch (e)
         {
            vSuccess = true;
         }
         if (!vSuccess)
            fail("getTypeValue should report an error because its a string type value.");
*/
      }
      function testValueConnectionFloat()
      {
         var vInstance4 = jTAC.create("Connections.Value", {value: 3.5, supportedTypeName: "float"});
         assertNotNull(vInstance4);
         assertEquals(3.5, vInstance4.getTypedValue());
         assertEquals("3.5", vInstance4.getTextValue()); // might throw an exception
         vInstance4.setTypedValue(100);
         assertEquals(100, vInstance4.getTypedValue());

         assertFalse(vInstance4.isNullValue());
         vInstance4.setTypedValue(null);
         assertTrue(vInstance4.isNullValue());
         vInstance4.setNullValue(0);
         assertFalse(vInstance4.isNullValue());
         vInstance4.setTypedValue(0);
         assertTrue(vInstance4.isNullValue());

      }
      function testValueConnectionDate()
      {

         var date1 = new Date(2010, 5, 1);
         var vInstance5 = jTAC.create("Connections.Value", {value: null, supportedTypeName: "date"});
         assertNotNull(vInstance5);
         assertNull(vInstance5.getTypedValue());
         vInstance5.setTypedValue(date1);
         assertObjectEquals(date1, vInstance5.getTypedValue());
         vInstance5.setTypedValue("a string");
      }
      function testValueConnectionBoolean()
      {

         var vInstance7 = jTAC.create("Connections.Value", {value: true});
         assertNotNull(vInstance7);
         assertTrue(vInstance7.getTypedValue());
         vInstance7.setTypedValue(false);
         assertFalse(vInstance7.getTypedValue());
      }

      if (!document.referrer) // for running within a debugger, but not within the jsunit TestRunner.
      try
      {
         testValueConnectionInt();
         testValueConnectionString();
         testValueConnectionFloat();
         testValueConnectionDate();
         testValueConnectionBoolean();
      }
      catch (e)
      {
         window.alert(e instanceof JsUnit.Failure ? e.comment + "  " + e.jsUnitMessage : e.message);
      }

   </script>

</body>
</html>
