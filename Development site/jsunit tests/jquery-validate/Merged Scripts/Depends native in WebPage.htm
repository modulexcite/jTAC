<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
   <script src="../../../jsunit/jsUnitCore.js" type="text/javascript"></script>
   <script src="../../../jsunit tests/Shared.js" type="text/javascript"></script>
   <script src="../../../jquery/jquery-1.5.1.js" type="text/javascript"></script>
   <script src="../../../jquery-validate/v1.10.0/jquery.validate.js" type="text/javascript"></script>
   <script src="../../../jquery-globalize/globalize.js" type="text/javascript"></script>
   <script src="../../../jTAC-min/Merged/core.js" type="text/javascript"></script>
   <script src="../../../jTAC-min/Merged/typemanagers-numbers.js" type="text/javascript"></script>
   <script src="../../../jTAC-min/Merged/jquery extensions/validation-basic.js" type="text/javascript"></script>
   <script src="../../../jTAC-min/Translations/Culture%20Neutral.js" type="text/javascript"></script>

   <link href="../../../jTAC%20Appearance/jquery.validate.css" rel="stylesheet" type="text/css" />
</head>
<body>
Tests the <b>depends</b> feature on Conditions.DataTypeCheck and Conditions.Range objects using the rules shown below.<br />
Uses jsunit as it loads. Once it passes those tests, you can interact with the UI to further test this page.<br />
There are two ways to setup depends. This uses the approach built into jquery-validate where the property 'depends'
is a companion property to 'param' in each rule.<br />
   The test rules: Values must be integers between 1 and 10.<br />
   The checkbox must be checked to enable the validators. .<br />

   <form action="" method="get" id="Form1" >
      <input type="checkbox" id="CheckBox1" value="checked" name="CheckBox1" />
      <input type="text" id="TextBox1" name="TextBox1" /><br />
      <span id="TextBox1_Result" data-valmsg-for="TextBox1" ></span><br />

      <br />
      <input type="submit" id="Button1" value="Submit" />
   </form>

   <script type="text/javascript">


      function Init()
      {
         $("#Form1").validate({ onkeyup: false, debug: true });
         $("#TextBox1").rules("add",
         {
           datatypecheck : 
            {
               param : {},
               depends : "#CheckBox1:checked"
            },
            advrange : 
            {
               param : {minimum : 1, maximum : 10},
               depends : "#CheckBox1:checked"
            },
            messages: {
               datatypecheck : "Must be an integer",
               advrange: "Out of range"
            }

         });


      // ------------ jsunit tests -----------------------------
         if (!document.referrer) // for running within a debugger, but not within the jsunit TestRunner.
         try
         {
            testInstalled();
            testTextBox1();
         }
         catch (e)
         {
            window.alert(e instanceof JsUnit.Failure ? e.comment + "  " + e.jsUnitMessage : e.message);
         }

      }
      $(document).ready(Init());
//---- jsunit tests -------------------------------------------------
      function testInstalled() 
      {
         assertNotNull(window.$);
         assertNotNull(window.$.validator);
         assertNotNull($.validator.methods);
         assertNotNull(jTAC);
         assertNotNull(jTAC.jqueryValidate);
         assertNotNull(jTAC.Conditions.Base);
         assertFunction(jTAC.jqueryValidate.createCondition);
         assertFunction(jTAC.jqueryValidate.evaluate);

         var form = $("#Form1");
         var validator = $.data(form[0], "validator");
         assertNotNull(validator);
         var rules = validator.settings.rules;

      }

      function testTextBox1()
      {
         runJqueryValidate("TextBox1", "abc", true, '', "CheckBox1", "");  // unchecked is always valid
         runJqueryValidate("TextBox1", "abc", false, 'Must be an integer', "CheckBox1", "1");
         runJqueryValidate("TextBox1", "1", true, '', "CheckBox1", "1");
         runJqueryValidate("TextBox1", "11", false, 'Out of range', "CheckBox1", "1");
         runJqueryValidate("TextBox1", "11", true, '', "CheckBox1", "");  // unchecked is always valid
      }

   </script>
</body>
</html>
