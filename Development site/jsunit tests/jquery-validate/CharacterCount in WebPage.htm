<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
   <script src="../../jsunit/jsUnitCore.js" type="text/javascript"></script>
   <script src="../Shared.js" type="text/javascript"></script>
   <script src="../../jquery/jquery-1.5.1.js" type="text/javascript"></script>
   <script src="../../jquery-validate/v1.10.0/jquery.validate.js" type="text/javascript"></script>
   <script src="../../jquery-globalize/globalize.js" type="text/javascript"></script>
   <script src="../../jTAC/jTAC.js" type="text/javascript"></script>
   <script src="../../jTAC/TypeManagers/Base.js" type="text/javascript"></script>
   <script src="../../jTAC/Connections/Base.js" type="text/javascript"></script>
   <script src="../../jTAC/Connections/BaseElement.js" type="text/javascript"></script>
   <script src="../../jTAC/Connections/FormElement.js" type="text/javascript"></script>
   <script src="../../jTAC/Conditions/Base.js" type="text/javascript"></script>
   <script src="../../jTAC/Conditions/BaseOneConnection.js" type="text/javascript"></script>
   <script src="../../jTAC/Conditions/BaseOneOrMoreConnections.js" type="text/javascript"></script>
   <script src="../../jTAC/Conditions/BaseCounter.js" type="text/javascript"></script>
   <script src="../../jTAC/Conditions/CharacterCount.js" type="text/javascript"></script>
   <script src="../../jTAC/jquery-validate/Condition%20Extensions.js" type="text/javascript"></script>
   <script src="../../jTAC/Connections/Value.js" type="text/javascript"></script>
   <script src="../../jTAC/jquery-validate/ReplaceTokens%20PlugIn.js" type="text/javascript"></script>
   <script src="../../jTAC/jquery-validate/Rules.js" type="text/javascript"></script>
   <script src="../../jTAC/Translations/Culture%20Neutral.js" type="text/javascript"></script>
   <link href="../../jTAC%20Appearance/jquery.validate.css" rel="stylesheet" type="text/css" />

</head>
<body>
Tests the Conditions.CharacterCount class using the rules shown below.<br />
Uses jsunit as it loads. Once it passes those tests, you can interact with the UI to further test this page.<br />
   <form action="" method="get" id="Form1" >
      min 5:
      <input type="text" id="TextBox1" name="TextBox1" autocomplete="off" />     
      <span id="TextBox1_Result" data-valmsg-for="TextBox1" ></span><br />
      <label for="TextBox2">Max 10:</label>  
      <input type="text" id="TextBox2" name="TextBox2" autocomplete="off" />     
      <span id="TextBox2_Result" data-valmsg-for="TextBox2" ></span><br />
      <label for="TextBox3">5 to 10:</label>  
      <input type="text" id="TextBox3" name="TextBox3" autocomplete="off" />     
      <span id="TextBox3_Result" data-valmsg-for="TextBox3" ></span><br />
      <label for="TextBox4">Combined 10 to 20:</label>
      <input type="text" id="TextBox4" name="TextBox4" autocomplete="off" /> (combines with the next textbox)  
      <input type="text" id="TextBox5" name="TextBox5" autocomplete="off" /> 
      <span id="TextBox4_Result" data-valmsg-for="TextBox4" ></span><br />

      <label for="TextBox6">TextArea max 5:</label>
      <textarea id="TextBox6" name="TextBox6" ></textarea> (test to ensure ENTER is treated as 2 characters)  <br />
      <span id="TextBox6_Result" data-valmsg-for="TextBox6" ></span><br />
      <label for="TextBox7">TextArea max 5:</label>
      <textarea id="TextBox7" name="TextBox7"  ></textarea>(Connection.fixLength= false. Test to ensure ENTER is treated as 1 characters)  <br />
      <span id="TextBox7_Result" data-valmsg-for="TextBox7" ></span><br />
      <br />
      <input type="submit" id="Button1" value="Submit" />
   </form>

   <script type="text/javascript">


      function Init()
      {
         jTAC.translations.register("", {
            "xxx": "Minimum of 5"
            }); // replace the default

         $("#Form1").validate({ onkeyup: false, debug: true});
         $("#TextBox1").rules("add",
         {

            charactercount:
            {
               param: { minimum: 5, connection: { defaultLookupKey : "xxx"} }
            }

         });
         $("#TextBox2").rules("add",
         {

            charactercount:
            {
               param: { maximum: 10}
            }

         });
         $("#TextBox3").rules("add",
         {

            charactercount:
            {
               param: { minimum: 5, maximum: 10}
            },
            messages:
            {
               charactercount: "Between {MINIMUM} and {MAXIMUM} characters. You entered {COUNT}. Difference of {DIFF} {DIFF:character:characters}."
            }

         });

         $("#TextBox4").rules("add",
         {

            charactercount:
            {
               param: { moreConnections: ["TextBox5"], 
                  minimum: 10, maximum : 20
               }
            }

         });
         $("#TextBox6").rules("add",
         {

            charactercount:
            {
               param: { maximum: 5, connection: {trim: false}}
            },
            messages:
            {
               charactercount: "No more than {MAXIMUM} characters. You entered {COUNT}. Difference of {DIFF} {DIFF:character:characters}."
            }

         });

         $("#TextBox7").rules("add",
         {

            charactercount:
            {
               param: { maximum: 5, connection: {fixLength: false, trim: false}}
            },
            messages:
            {
               charactercount: "No more than {MAXIMUM} characters. You entered {COUNT}. Difference of {DIFF} {DIFF:character:characters}."
            }

         });


         jTAC.jqueryValidate.attachMultiConnections("#Form1");


      // ------------ jsunit tests -----------------------------
         if (!document.referrer) // for running within a debugger, but not within the jsunit TestRunner.
         try
         {
            testInstalled();
//            testTextBox1();
//            testTextBox2();
//            testTextBox3();
//            testTextBox4();
//            testTextBox6();
            testTextBox7();
         }
         catch (e)
         {
            window.alert(e instanceof JsUnit.Failure ? e.comment + "  " + e.jsUnitMessage : e.message);
         }

      }
      $(document).ready(Init());
//---- jsunit tests -------------------------------------------------
      function testInstalled() 
      {
         assertNotNull(window.$);
         assertNotNull(window.$.validator);
         assertNotNull($.validator.methods);
         assertNotNull(jTAC);
         assertNotNull(jTAC.jqueryValidate);
         assertNotNull(jTAC.Conditions.Base);
         assertFunction(jTAC.jqueryValidate.createCondition);
         assertFunction(jTAC.jqueryValidate.evaluate);

         var form = $("#Form1");
         var validator = $.data(form[0], "validator");
         assertNotNull(validator);
         var rules = validator.settings.rules;

      }

      function testTextBox1()
      {
         runJqueryValidate("TextBox1", "abc", false, 
            '<span class="message-label">Minimum of 5</span> must have between 5 and 9999999 characters.');
         runJqueryValidate("TextBox1", "123456", true, '');
      }
      function testTextBox2()
      {
         runJqueryValidate("TextBox2", "123456789012", false, 
            '<span class="message-label">Max 10</span> must have between 0 and 10 characters.');
         runJqueryValidate("TextBox2", "abc", true, '');
      }
      function testTextBox3()
      {
         runJqueryValidate("TextBox3", "123", false, 
            'Between 5 and 10 characters. You entered 3. Difference of 2 characters.');
         runJqueryValidate("TextBox3", "1234", false, 
            'Between 5 and 10 characters. You entered 4. Difference of 1 character.');
         runJqueryValidate("TextBox3", "12345", true, '');
      }
      function testTextBox4()
      {
         runJqueryValidate("TextBox4", "abc", false, 
            '<span class="message-label">Combined 10 to 20</span> must have between 10 and 20 characters.', 
            "TextBox5", "");  // total of 3
         runJqueryValidate("TextBox4", "1234567890", true, '', "TextBox5", "");  // total of 10
         runJqueryValidate("TextBox4", "", true, '', "TextBox5", "1234567890");  // total of 10
         runJqueryValidate("TextBox4", "1234567890", true, '', "TextBox5", "1234567890");  // total of 20
      }
      function testTextBox6()
      {
         runJqueryValidate("TextBox6", "123456", false, 
            'No more than 5 characters. You entered 6. Difference of 1 character.');
         runJqueryValidate("TextBox6", "12345", true, '');
         runJqueryValidate("TextBox6", "12\n45", false,  // \n is ASCII 10 which is used in various browsers to represent 2 chars: ASCII 13 + ASCII 10
            'No more than 5 characters. You entered 6. Difference of 1 character.');
         runJqueryValidate("TextBox6", "12\r\n45", false,  // \r\n does not cause the \n to be counted as two.
            'No more than 5 characters. You entered 6. Difference of 1 character.');

         // lead and trailing \n are normally stripped. This test has connection.trim= false to ensure they are counted to test the Connection.textLength() function
         runJqueryValidate("TextBox6", "1234\n", false,  // \n is ASCII 10 which is used in various browsers to represent 2 chars: ASCII 13 + ASCII 10
            'No more than 5 characters. You entered 6. Difference of 1 character.');
         runJqueryValidate("TextBox6", "1234\r\n", false,  // \r\n does not cause the \n to be counted as two.
            'No more than 5 characters. You entered 6. Difference of 1 character.');
         runJqueryValidate("TextBox6", "\n2345", false,  // \n is ASCII 10 which is used in various browsers to represent 2 chars: ASCII 13 + ASCII 10
            'No more than 5 characters. You entered 6. Difference of 1 character.');
         runJqueryValidate("TextBox6", "\r\n2345", false,  // \r\n does not cause the \n to be counted as two.
            'No more than 5 characters. You entered 6. Difference of 1 character.');
      }
      function testTextBox7()
      {
      // these use FormElement.fixLength = false, leaving ASCII 10 as 1 character.
         runJqueryValidate("TextBox7", "123456", false, 
            'No more than 5 characters. You entered 6. Difference of 1 character.');
         runJqueryValidate("TextBox7", "12345", true, '');

      // IE will strip \r character when assigned to TextBox7.value. not so with Opera
      // Opera will add \r before \n character.
      // lead and trailing \n are normally stripped. This test has connection.trim= false to ensure they are counted to test the Connection.textLength() function
         if (window.navigator.userAgent.indexOf("Opera") > -1) {
            runJqueryValidate("TextBox7", "12\n45", false, 
               'No more than 5 characters. You entered 6. Difference of 1 character.');
            runJqueryValidate("TextBox7", "12\r\n45", false,
               'No more than 5 characters. You entered 6. Difference of 1 character.');
            runJqueryValidate("TextBox7", "1234\r\n", false,
               'No more than 5 characters. You entered 6. Difference of 1 character.');
            runJqueryValidate("TextBox7", "\r\n2345", false, 
               'No more than 5 characters. You entered 6. Difference of 1 character.');
         }
         else {
            runJqueryValidate("TextBox7", "12\n45", true, '');

            runJqueryValidate("TextBox7", "12\r\n45", true, '');


            runJqueryValidate("TextBox7", "1234\n", true, '');
            runJqueryValidate("TextBox7", "1234\r\n", true, '');

            runJqueryValidate("TextBox7", "\n2345", true, '');
            runJqueryValidate("TextBox7", "\r\n2345", true, '');
         }
      }

   </script>
</body>
</html>
