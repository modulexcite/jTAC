if(!window.jTAC){throw new Error("window.jTAC not created.")}jTAC.parser={_registered:new Array(),register:function(b){var a=jTAC.create(b,null,false);this._registered.push(a)},next:function(d){var b=this._registered;for(var a=0;a<b.length;a++){var c=b[a].parse(d,this);if(c){return c}}return null},err:function(e,a,d,b){var c="Could not parse the expression starting here: "+e;if(a){c="Error: "+a+" "+c}jTAC.error(c,d,b?b:(d?null:"Parser"))},asExact:function(h,b,f,g,e){var d=this._peREs;if(!d){this._peREs=d=[]}var i=d[b];if(!i){var c="^\\s*"+jTAC.escapeRE(b);if(e){c+="(?="+e+"|$)"}d[b]=i=new RegExp(c,g?"i":"")}var a=i.exec(h);if(a){return{rem:h.substr(a[0].length)}}if(f){this.err(h,b+" expected.",null,"Parser.asExact")}return null},asNumber:function(c,b){if(!this._numRE){this._numRE=new RegExp("^\\s*(\\-?\\d+(\\.\\d+)?)(?![\\.\\dA-Za-z])")}var a=this._numRE.exec(c);if(a){var d=parseFloat(a[1]);return{number:d,rem:c.substr(a[0].length)}}if(b){this.err(c,"Number expected.",null,"Parser.asNumber")}return null},asInt:function(c,b){if(!this._numRE){this._numRE=new RegExp("^\\s*(\\-?\\d+)(?!\\.A-Za-z)")}var a=this._numRE.exec(c);if(a){var d=parseInt(a[1],10);return{number:d,rem:c.substr(a[0].length)}}if(b){this.err(c,"Integer expected.",null,"Parser.asInt")}return null},asBool:function(c,b){var a=this.asExact(c,"true",false,false,"\\W");if(a){a.bool=true;return a}a=this.asExact(c,"false",false,false,"\\W");if(a){a.bool=false;return a}if(b){this.err(c,"true or false expected.",null,"Parser.asBool")}return null},asParmDelim:function(c,b){if(!this._sepRE){this._sepRE=new RegExp("^\\s*(\\,|\\)|\\})")}var a=this._sepRE.exec(c);if(a){return{delim:a[1],rem:c.substr(a[0].length)}}if(b){this.err(c,"Comma or ) character expected.",null,"Parser.asParmDelim")}return null},oParen:function(b,a){return this.asExact(b,"(",a,false,null)},cParen:function(b,a){return this.asExact(b,")",a,false,null)},asJSon:function(text,req){var m,obj,re;if(!/^\s*\{/.test(text)){return null}m=/^\s*/.exec(text);if(m){text=text.substr(m[0].length)}var nest=0;re=new RegExp("([\\{\\}])","g");while(m=re.exec(text)){if(m[1]=="{"){nest++}else{if(nest){nest--;if(!nest){try{obj=eval("("+text.substr(0,m.index+1)+");")}catch(e){this.err(text,"JSon parsing error. "+e.message,null,"Parser.asJSon")}return{JSon:obj,rem:text.substr(m.index+1)}}}}}this.err(text,"JSon parsing error. Missing closing }.",null,"Parser.asJSon")},asNull:function(b,a){return this.asExact(b,"null",a,false,"\\W")},asNaN:function(b,a){return this.asExact(b,"NaN",a,false,"\\W")},asId:function(d,c){if(!this._idRE){this._idRE=new RegExp("^\\s*((\"([A-Za-z_][\\w]*)\")(?=\\W|$))|^\\s*(('([A-Za-z_][\\w]*)')(?=\\W|$))","i")}var a=this._idRE.exec(d);if(a){var b=a[0];if(b){return{id:a[3]||a[6],rem:d.substr(b.length)}}}if(c){this.err(d,"Id required",null,"Parser.asId")}return null},asClass:function(h,a,b,d){var g;var c=this.asId(h,false);if(c){try{g=jTAC.create(c.id)}catch(f){this.err(h,f.message)}}else{c=this.asJSon(h,false);if(c){try{g=jTAC.create(null,c.JSon)}catch(f){this.err(h,f.message)}}else{if(a){c=this.asNull(h,false);if(c){return{obj:null,rem:c.rem}}}}}if(g){if(b&&!b(g)){this.err(h,"Unexpected class",null,"Parser.asClass")}return{obj:g,rem:c.rem}}if(d){this.err(h,"Class name expected.",null,"Parser.asClass")}return null}};