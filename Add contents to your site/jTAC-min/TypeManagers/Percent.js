jTAC._internal.temp._TypeManagers_Percent={extend:"TypeManagers.BaseFloat",constructor:function(a){this.callParent([a])},config:{trailingZeroDecimalPlaces:null,showPercentSymbol:true,allowPercentSymbol:true,oneEqualsOneHundred:true},dataTypeName:function(){return"percent"},storageTypeName:function(){return"float"},_stringToNative:function(a){if(!this.getAllowPercentSymbol()&&(a.indexOf(this._nf("Symbol"))>-1)){this._inputError("Percent symbol found but not allowed.")}var b=this.callParent([a]);b=this._toNativeAdjust(b);return b},_nativeToString:function(c){c=this._toStringAdjust(c);var b=this.callParent([c]);if(!this.getShowPercentSymbol()){var a=this._cache.stripSymbolRE;if(!a){a=this._cache.stripSymbolRE=new RegExp("\\s?%\\s?")}b=b.replace(a,"")}else{b=b.replace("%",this._nf("Symbol"))}return b},toValueNeutral:function(b){var a=this.callParent([b]);return this._toNativeAdjust(a)},toStringNeutral:function(a){a=this._toStringAdjust(a);return this.callParent([a])},_moreValidChars:function(a){return this.getAllowPercentSymbol()?this._nf("Symbol"):""},getTrailingZeroDecimalPlaces:function(){if(this.getMaxDecimalPlaces()==0){return 0}if(this.config.trailingZeroDecimalPlaces!=null){return this.config.trailingZeroDecimalPlaces}return this._nf("Decimals")},_toNativeAdjust:function(b){var a=this.getMaxDecimalPlaces();if((b!=null)&&this.getOneEqualsOneHundred()&&(a!=0)){var c=this.numDecPlaces(b);b=b/100;c=c+2;b=this.round(b,2,c)}return b},_toStringAdjust:function(b){var a=this.getMaxDecimalPlaces();if((b!=null)&&this.getOneEqualsOneHundred()&&(a!=0)){var c=this.numDecPlaces(b);b=100*b;c=c-2;if(c<0){c=0}b=this.round(b,2,c)}return b},_nf:function(b){var a=this.percentFormat(b);if(a===undefined){a=this.numberFormat(b)}return a}};jTAC.define("TypeManagers.Percent",jTAC._internal.temp._TypeManagers_Percent);jTAC.defineAlias("Percent","TypeManagers.Percent");jTAC.defineAlias("Percent.Positive","TypeManagers.Percent",{allowNegatives:false});jTAC.defineAlias("Percent.Integer","TypeManagers.Percent",{maxDecimalPlaces:0});jTAC.defineAlias("Percent.Integer.Positive","TypeManagers.Percent",{maxDecimalPlaces:0,allowNegatives:false});