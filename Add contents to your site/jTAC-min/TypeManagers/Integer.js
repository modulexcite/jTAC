jTAC._internal.temp._TypeManagers_Integer={extend:"TypeManagers.BaseNumber",constructor:function(a){this.callParent([a])},config:{fillLeadZeros:0},configrules:{fillLeadZeros:jTAC.checkAsIntOrNull},dataTypeName:function(){return"integer"},storageTypeName:function(){return"integer"},_stringToNative:function(b){if(b==null){this._error("Cannot evaluate null value")}if(b.indexOf(this.numberFormat("DecimalSep"))>-1){this._error("Cannot evaluate a floating point number.")}var a=this.numberFormat("GroupSep");if(!this.getAllowGroupSep()&&a&&(b.indexOf(a)>-1)){this._inputError("Group separator not allowed.")}var c=this._parse(b);if(isNaN(c)){this._inputError("Cannot convert ["+b+"] to "+this.dataTypeName()+".")}return c},_parse:function(d){d=this._stripGroupSep(d);if(this.getStrictSymbols()){this._checkStrictSymbols(d)}var c=this._nf("NegSymbol");var g=d.indexOf(c)>-1;var b=this._cache.intCharsRE;if(!b){var a=jTAC.escapeRE(c);this._cache.intCharsRE=b=new RegExp("^("+a+")?\\d+("+a+")?$")}if(!b.test(d)){this._inputError("Illegal character found.")}if(g){d=d.replace(c,"")}var f=parseInt(d,10);if(!isNaN(f)&&(f!=null)&&((f>2147483647)||(f<-2147483648))){this._inputError("Exceeds 32 bit integer.")}if(g){f=-f}return f},_nativeToString:function(c){if(c==null){return""}var b=Math.abs(c).toString();if(this.getShowGroupSep()){b=this._applyGroupSep(b)}var a=this.getFillLeadZeros();if(a&&(b.length<a)){e="0000000000";b=e.substr(0,a-b.length)+b}if(c<0){b=this.numberFormat("NegPattern").replace("n",b)}return b},_reviewValue:function(a){if(Math.floor(a)!=a){this._inputError("Has decimal point.")}return this.callParent([a])},toValueNeutral:function(a){if(a==null){return null}try{this._pushContext();if(typeof(a)=="number"){return this._reviewValue(a)}if(/^\-?\d+$/.test(a)){return parseInt(a)}this._inputError("Required format: [-]digits")}finally{this._popContext()}},_valCharRE:function(){var b=this.getAllowGroupSep()?this.numberFormat("GroupSep"):"";var a=this.getAllowNegatives()?this.numberFormat("NegSymbol"):"";return new RegExp("[\\d"+jTAC.escapeRE(b+a)+"]")}};jTAC.define("TypeManagers.Integer",jTAC._internal.temp._TypeManagers_Integer);jTAC.defineAlias("Integer","TypeManagers.Integer");jTAC.defineAlias("Integer.Positive","TypeManagers.Integer",{allowNegatives:false});