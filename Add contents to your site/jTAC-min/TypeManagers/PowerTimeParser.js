jTAC.require("TypeManagers.BaseTime");jTAC._internal.temp._TypeManagers_PowerTimeParser={constructor:function(a){if(a!=null){owner=a.owner}},config:{defaultAM:true,noSecsEnforced:true,moreTimeSeps:null,insertTimeSeps:true,trimParts:false,decimalCharacterMode:0,fullAMPM:false},configrules:{defaultAM:jTAC.checkAsBoolOrNull,moreTimeSeps:jTAC.checkAsStrOrNull,decimalCharacterMode:[0,1,2]},owner:null,parse:function(l){var d=this.owner;if(!d){this._error("Must assign the owner field.")}var b,j=d.dateTimeFormat("TimeSep"),c=this.config;l=jTAC.trimStr(l);if(!l){return null}l=this._applyDCMode(l);if(typeof l=="object"){return l}if(c.moreTimeSeps){var m=new RegExp("["+jTAC.escapeRE(c.moreTimeSeps)+"]","ig");l=l.replace(m,j)}if(c.insertTimeSeps&&(l.length>2)&&(l.indexOf(j)==-1)){l=this._insertTSeps(l)}var h,k,e,b={h:0,m:null,s:null},f=d._patternOrder(false,"Hhms"),g=this._splitParts(l);if(f.indexOf("s")==-1){f.push("s")}if(g.length>f.length){this._inputError("Too many parts with digits")}for(h=0;(h<g.length);h++){e=g[h];if(e==null){continue}k=parseInt(e,10);if(isNaN(k)||(k<0)){this._inputError("Could not convert ["+e+"] to digits")}else{b[f[h].toLowerCase()]=k;switch(f[h]){case"s":if(k>59){this._inputError("Seconds exceed 59")}break;case"m":if(k>59){this._inputError("Minutes exceed 59")}break;case"h":case"H":break}}}var a=d.getParseTimeRequires();if(b.m==null){if(a!="h"){this._inputError("Minutes are required.")}b.m=0}if(b.s==null){if(a=="s"){this._inputError("Seconds are required.")}b.s=0}if(b.s&&c.noSecsEnforced&&((d.getTimeFormat()%10)==1)){this._inputError("Seconds cannot be assigned")}if(d._isTOD()){b.h=this._correctHours(b.h,l)}b.time=b.h*3600+b.m*60+b.s;return b},_correctHours:function(e,f){var a=this.owner;var c=this._hasDesig("AM",f),g=this._hasDesig("PM",f);if(!a._isTOD()&&(c||g)){this._inputError("AM/PM designator not allowed in duration.")}if(e>23){this._inputError("Hours exceeds 23.")}if(e>12){return e}if(c&&g){g=false}else{if(!c&&!g){var b=a._timePattern().indexOf("H")>-1;if(b){return e}var d=this.config;if(d.defaultAM==null){this._inputError("Cannot determine hours as AM or PM")}else{g=!d.defaultAM}}}if(g&&(e<12)){e=e+12}else{if(c&&(e==12)){e=0}}return e},_hasDesig:function(d,h){var b=this.owner;var g=b.dateTimeFormat("AM"),c=b.dateTimeFormat("PM"),e=d=="AM"?g:c,f,a;if(!e){return false}e=e.toUpperCase();a=h.toUpperCase();f=a.indexOf(e)>-1;if(!f&&(e.length>1)&&!this.config.fullAMPM){if(g.charAt(0)!=c.charAt(0)){f=a.indexOf(e.charAt(0))>-1}}return f},_splitParts:function(g){var b=this.owner;var e=this._cache.splitRE;if(!e){var d=b.dateTimeFormat("TimeSep"),f=jTAC.escapeRE(d),c=f;if(this.config.trimParts&&(d!=" ")){c="\\s?"+f+"\\s?"}e=this._cache.splitRE=new RegExp("^[^\\d"+f+"]*(\\d+)("+c+"(\\d*)("+c+"(\\d*))?)?[^\\d"+f+"]*$")}var a=e.exec(g);if(a){return[a[1]||null,a[3]||null,a[5]||null]}this._inputError("Cannot extract the h/m/s parts")},_insertTSeps:function(i){var a=this.owner;var f=/\d+/.exec(i);if(!f){return i}var b=f[0];var d=(b.length%2==0)?b.substr(0,2):b.substr(0,1);var c=b.substr(d.length,2);var k="";var j=b.length-(d.length+c.length);if(j>0){k=b.substr(d.length+c.length,j)}var g=a.dateTimeFormat("TimeSep");var e=d;if(c!=""){e+=g+c;if(k!=""){e+=g+k}}return i.replace(b,e)},_applyDCMode:function(g){var e=this.getDecimalCharacterMode();if(e!=0){var b=this.owner;var j=b.numberFormat("DecimalSep");var f=b.dateTimeFormat("TimeSep");if((g.indexOf(j)>-1)&&(j!=f)){switch(e){case 1:var i=this._cache.floattm;if(!i){jTAC.require("TypeManagers.Float");i=this._cache.floattm=jTAC.create("TypeManagers.Float");i.setCultureName(b.getCultureName())}var a=i.toValue(g);if(!a){this._inputError("Could not convert decimal value")}a=a*3600;var d=Math.floor(a/3600);var c=Math.floor((a%3600)/60);var k=Math.floor(a%60);return{h:d,m:c,s:k};case 2:g=jTAC.replaceAll(g,j,f,true);break}}}return g},valChars:function(a){return(this.getDecimalCharacterMode()!=0)?a+this.owner.numberFormat("DecimalSep"):a}};jTAC.define("TypeManagers.PowerTimeParser",jTAC._internal.temp._TypeManagers_PowerTimeParser);jTAC.plugInParser("TypeManagers.PowerTimeParser","TypeManagers.BaseTime");